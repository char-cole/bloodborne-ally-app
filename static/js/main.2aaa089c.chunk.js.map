{"version":3,"sources":["components/Links.js","actions/index.js","containers/LinksContainer.js","components/PageHeader.js","components/Docs.js","containers/DocsContainer.js","components/Nothing.js","containers/NothingContainer.js","components/SearchPage.js","components/Search.js","containers/SearchRunesContainer.js","containers/RuneSearchPageContainer.js","containers/SearchGesturesContainer.js","containers/GestureSearchPageContainer.js","components/KeyItemSearchOptions.js","containers/KeyItemSearchOptionsContainer.js","containers/SearchKeyItemsContainer.js","containers/KeyItemSearchPageContainer.js","components/ListPage.js","containers/ListChalicesPageContainer.js","containers/ListGesturesPageContainer.js","App.js","serviceWorker.js","reducers/index.js","store.js","state.js","index.js"],"names":["Links","props","navLinks","map","x","i","react_default","a","createElement","react_router_dom","to","url","className","key","onClick","updateResults","name","updateSearch","search","type","value","stuff","console","log","toggleChalice","toggle","updateNothing","nothing","connect","state","dispatch","PageHeader","page","description","Docs","getTypes","gql","_templateObject","whatIs","href","rel","target","typeDivs","react_apollo_esm","query","_ref","loading","error","data","types","allDocs","__schema","sort","b","id","allTypes","includes","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","fields","field","index","array","required","typeType","ofType","border","length","components_PageHeader","Nothing","SearchPage","this","searchFor","NothingContainer","results","Component","Search","client","onSubmit","Object","asyncToGenerator","regenerator_default","mark","_callee","event","_ref2","wrap","_context","prev","next","preventDefault","variables","searchEntry","searchString","split","toUpperCase","slice","toLowerCase","join","chalice","chaliceCheck","sent","queryType","edges","nothingResults","stop","_x","apply","arguments","onChange","e","searchOptions","SearchRunesContainer_templateObject","currentResults","SearchRunesContainer","lineTwo","node","isCovenant","tier","indexOf","toString","effect","SearchGesturesContainer_templateObject","SearchGesturesContainer","encounter","rewardFrom","location","step","quest","firstAvailablePhase","KeyItemSearchOptions","htmlFor","SearchKeyItemsContainer_templateObject","KeyItemSearchOptionsContainer","SearchKeyItemsContainer","source","droppedByBoss","boss","pickUp","isChalice","ListPage","_this","buttons","ListChalicesPageContainer_templateObject","ListGesturesPageContainer_templateObject","queryByReward","_templateObject2","App","basename","process","role","LinksContainer","style","minHeight","react_router","path","component","KeyItemSearchPageContainer","GestureSearchPageContainer","RuneSearchPageContainer","ListChalicesPageContainer","ListGesturesPageContainer","exact","DocsContainer","Boolean","window","hostname","match","rootReducer","combineReducers","undefined","action","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","__typename","ApolloClient","uri","credentials","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2aaa089c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Links = (props) => {\r\n  return (\r\n    props.navLinks.map((x,i) => {\r\n      return (\r\n        <Link to={x.url} className=\"col-2 text-center\" key={i} onClick={() => props.updateResults([])}>\r\n          {x.name}\r\n        </Link>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\nexport default Links;","export function updateSearch(search) {\r\n  return {\r\n    type: \"SEARCH_UPDATED\",\r\n    value: search\r\n  }\r\n}\r\n\r\nexport function updateResults(stuff) {\r\n  console.log('get this stuff')\r\n  console.log(stuff)\r\n  return {\r\n    type: \"RESULTS_UPDATED\",\r\n    value: stuff\r\n  }\r\n}\r\n\r\nexport function toggleChalice(toggle) {\r\n  console.log(toggle)\r\n  if (toggle) {\r\n    return {\r\n      type: \"TRUE_TO_FALSE\",\r\n      value: toggle\r\n    }\r\n  }\r\n  else {\r\n    return {\r\n      type: \"FALSE_TO_TRUE\",\r\n      value: toggle\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateNothing(nothing) {\r\n  return {\r\n    type: \"NOTHING_UPDATED\",\r\n    value: nothing\r\n  }\r\n}","import Links from \"../components/Links\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateResults } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  navLinks: state.navLinks\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateResults: (stuff) => {\r\n    dispatch(updateResults(stuff))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Links);\r\n","import React from 'react'\r\n\r\nconst PageHeader = props => {\r\n  return (\r\n    <header className='text-left mb-4'>\r\n      <div className='w-75 p-2 mx-auto rounded shadow bg-danger text-white'>\r\n        <h5 className='m-0'>\r\n          Note: The Bloodborne Ally API is still in development.\r\n          <br />\r\n          <small>\r\n            This API goes to sleep when not in use, and can only be awakened\r\n            manually. Contact the owner if you would like to make queries\r\n            against the API.\r\n          </small>\r\n        </h5>\r\n      </div>\r\n      <h2 className='font-weight-bold'>{props.page}</h2>\r\n      <h5 className='pr-5 font-weight-normal'>\r\n        {props.description || 'Find ' + props.page + ' by name'}\r\n      </h5>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default PageHeader\r\n","import React from 'react'\r\nimport { Query } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport PageHeader from './PageHeader.js'\r\n\r\nconst Docs = props => {\r\n  const getTypes = gql`\r\n    {\r\n      __schema {\r\n        types {\r\n          name\r\n          description\r\n          fields {\r\n            name\r\n            description\r\n            type {\r\n              name\r\n              ofType {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `\r\n\r\n  const whatIs = (\r\n    <div className='col-12 col-md-6 '>\r\n      <h5>\r\n        Introduction to <i>Bloodborne</i> and Bloodborne Ally\r\n      </h5>\r\n      <div className='p-2 my-3 border shadow rounded'>\r\n        <p className='mb-2'>\r\n          Bloodborne Ally is an API written in GraphQL that queries a\r\n          loot-focused relational database built around the masterwork horror\r\n          game <i>Bloodborne</i> made by FromSoftware.\r\n        </p>\r\n        <p className='mb-2'>\r\n          For those unfamiliar with the game, it takes place in a rich and\r\n          complex world. The player must dig deeply into arcane secrets to\r\n          discover many of the items, places, bosses, characters, and storylines\r\n          the game has to offer.\r\n        </p>\r\n        <p className='mb-2'>\r\n          Even after overcoming the challenging combat of <i>Bloodborne</i>, it\r\n          can still be difficult to make sense of what is happening in the\r\n          world. There are many written and video guides to help players find\r\n          what they're missing, understand what they're doing, and navigate\r\n          terrifying mazes. This API has a different goal and is not intended to\r\n          replicate any of that work.\r\n        </p>\r\n      </div>\r\n      <h5>The Purpose of Bloodborne Ally</h5>\r\n      <div className='p-2 my-3 border shadow rounded'>\r\n        <p className='mb-2'>\r\n          This API is a navigational aid for experienced players. For those who\r\n          have drunk deeply of the Old Blood and have uncovered all the horrors\r\n          hidden in Yharnam and beyond, there are many reasons to start over and\r\n          do it all again. That's where Bloodborne Ally comes in. This API is\r\n          designed to generate a checklist, or a guide only in the barest sense,\r\n          of when and where an experienced player should go to get all the loot\r\n          in the game.\r\n        </p>\r\n        <p className='mb-2'>\r\n          The database this API queries does not contain any detailed\r\n          instructions on where or how to acquire items or meet NPCs. Written\r\n          descriptions are kept to a minimum, and the power of a relational\r\n          database is used to make it easy to find and remember what needs to be\r\n          done and when. For example, a query to find information about a\r\n          certain Weapon can also return a list of every Gesture that the player\r\n          should have acquired before the Weapon is even available.\r\n        </p>\r\n        <p className='mb-2'>\r\n          The above is only one example - it's possible to start at any endpoint\r\n          (also called a Type) and return information from any other endpoint\r\n          through the relationships built into the Schema (the list of all\r\n          Types). It's important to have an understanding of GraphQL and\r\n          relational databases befoer attempting to write your own queries with\r\n          this API, so if you're new to the subject you can read more{' '}\r\n          <a\r\n            href='https://graphql.org/learn/'\r\n            rel='noopener noreferrer'\r\n            target='_blank'\r\n          >\r\n            here\r\n          </a>\r\n          .\r\n        </p>\r\n      </div>\r\n      <h5>Types</h5>\r\n      <div className='p-2 my-3 border shadow rounded'>\r\n        <p className='mb-2'>\r\n          Each endpoint lists all of its fields (with each field guaranteed to\r\n          exist marked by a red asterisk) and the type of that field. The type\r\n          may be a primitive, such as String, or it may be another endpoint\r\n          Type, such as <code>Bloodborne_Location</code>. The word Connection at\r\n          the end of a type means that this is an automatically generated\r\n          relationship, and the query construction is slightly different, but\r\n          otherwise it is the same as an endpoint Type. For example, a type\r\n          listed as <code>_Bloodborne_BossConnection</code> means that the\r\n          result will be of the endpoint Type <code>Bloodborne_Boss</code>.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  const typeDivs = (\r\n    <Query query={getTypes}>\r\n      {({ loading, error, data }) => {\r\n        let types = []\r\n        if (loading) return null\r\n        if (error) {\r\n          console.log(error)\r\n        }\r\n\r\n        console.log(data)\r\n        console.log(props.allDocs)\r\n        types = data ? data.__schema.types : props.allDocs\r\n\r\n        types.sort((a, b) => {\r\n          return a.name > b.name ? 1 : -1\r\n        })\r\n\r\n        return (\r\n          <div id='accordion' className='col-12 col-md-6'>\r\n            {types.map((x, i) => {\r\n              if (props.allTypes.includes(x.name)) {\r\n                return (\r\n                  <div key={i} className='card border-dark mb-1'>\r\n                    <div\r\n                      className='card-header bg-dark text-left'\r\n                      id={'heading-' + i}\r\n                    >\r\n                      <h5 className='mb-0'>\r\n                        <button\r\n                          className='btn btn-link text-white'\r\n                          data-toggle='collapse'\r\n                          data-target={'#collapse-' + i}\r\n                          aria-expanded='false'\r\n                          aria-controls={'collapse-' + i}\r\n                        >\r\n                          {x.name}\r\n                        </button>\r\n                      </h5>\r\n                    </div>\r\n                    <div\r\n                      id={'collapse-' + i}\r\n                      className='collapse'\r\n                      aria-labelledby={'heading-' + i}\r\n                      data-parent='#accordion'\r\n                    >\r\n                      <div className='card-body'>\r\n                        <small className='px-1 mb-3 d-block'>\r\n                          {x.description}\r\n                        </small>\r\n                        <ul className='text-left list-unstyled py-0 px-1 m-0'>\r\n                          <li className='row py-2 font-weight-bold'>\r\n                            <p className='col-5'>Field</p>\r\n                            <p className='col-7'>Type</p>\r\n                          </li>\r\n                          {x.fields.map((field, index, array) => {\r\n                            let required\r\n                            let typeType = field.type.name\r\n                            if (field.type.ofType) {\r\n                              required = '*'\r\n                              typeType = field.type.ofType.name\r\n                            }\r\n                            let border = ' border-bottom'\r\n                            if (index === array.length - 1) border = ''\r\n                            if (field.name === 'id') field.description = ''\r\n                            return (\r\n                              <li key={index} className={'row py-2' + border}>\r\n                                <div className='col-5 border-right'>\r\n                                  {field.name}\r\n                                  <span className='text-danger'>\r\n                                    {required}\r\n                                  </span>\r\n                                </div>\r\n                                <span className='col-7'>{typeType}</span>\r\n                                <small className='col-12 text-muted'>\r\n                                  {field.description}\r\n                                </small>\r\n                              </li>\r\n                            )\r\n                          })}\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              } else return null\r\n            })}\r\n          </div>\r\n        )\r\n      }}\r\n    </Query>\r\n  )\r\n\r\n  return (\r\n    <div className='pb-3'>\r\n      <PageHeader\r\n        page={'Schema'}\r\n        description='This page displays the entire schema. Click on a type to view its description and a list of each of its fields.'\r\n      ></PageHeader>\r\n      <main className='row'>\r\n        {whatIs}\r\n        {typeDivs}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Docs\r\n","import {\r\n\tconnect\r\n} from \"react-redux\";\r\nimport Docs from \"../components/Docs\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tallTypes: state.allTypes,\r\n\tallDocs: state.allDocs\r\n});\r\n\r\nexport default connect(mapStateToProps)(Docs);","import React from 'react';\r\n\r\nconst Nothing = (props) => {\r\n  return (\r\n    <h5 className=\"col-12 text-center\">\r\n      {props.nothing}\r\n    </h5>\r\n  )\r\n}\r\n\r\nexport default Nothing;","import { connect } from \"react-redux\";\r\nimport Nothing from \"../components/Nothing\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  nothing: state.nothing\r\n});\r\n\r\nexport default connect(mapStateToProps)(Nothing);","import React, { Component } from 'react'\r\nimport PageHeader from './PageHeader.js'\r\nimport NothingContainer from '../containers/NothingContainer.js'\r\n\r\nclass SearchPage extends Component {\r\n  componentWillUnmount() {\r\n    this.props.updateResults([])\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PageHeader page={this.props.page}></PageHeader>\r\n        {this.props.searchFor}\r\n        <div className='row mt-5'>\r\n          <NothingContainer />\r\n          {this.props.results}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\r\nimport { ApolloConsumer } from \"react-apollo\";\r\n\r\nconst Search = (props) => {\r\n\r\n  let capitalize = (searchEntry) => {\r\n    let searchArray = searchEntry.split(' ').map(x => {\r\n      return x[0].toUpperCase() + x.slice(1).toLowerCase()\r\n    });\r\n    return searchArray.join(' ')\r\n  }\r\n\r\n  return (\r\n    <ApolloConsumer>\r\n      {client => (\r\n        <form className=\"row my-3 mx-0\" onSubmit={async (event) => {\r\n          event.preventDefault();\r\n          const { data } = await client.query({\r\n            query: props.query,\r\n            variables: {\r\n              \"search\": capitalize(props.searchString),\r\n              \"chalice\": props.chaliceCheck\r\n            }\r\n          })\r\n          props.updateResults(data[props.queryType].edges);\r\n          console.log(data[props.queryType].edges);\r\n          if(data[props.queryType].edges[0]) props.updateNothing(\"\")\r\n          else props.updateNothing(props.nothingResults)\r\n        }}>\r\n          <input type=\"text\"\r\n            className=\"w-50 rounded px-1\"\r\n            value={props.searchString}\r\n            onChange={(e) => props.updateSearch(e.target.value)}\r\n          ></input>\r\n          <button className=\"btn btn-light border border-dark ml-2\">\r\n            Search\r\n          </button>\r\n          {props.searchOptions}\r\n        </form>\r\n      )}\r\n    </ApolloConsumer>\r\n  )\r\n}\r\n\r\nexport default Search;","import { connect } from \"react-redux\";\r\nimport gql from \"graphql-tag\";\r\nimport Search from \"../components/Search\";\r\nimport { updateSearch, updateResults, updateNothing } from \"../actions\";\r\n\r\nlet query = gql`\r\nquery getTheseRunes($search: String!) {\r\n  Bloodborne_listRune(filter: {\r\n    node: {\r\n      name: {\r\n        contains: $search\r\n      }\r\n    }\r\n  }) {\r\n    edges {\r\n      node {\r\n        id\r\n        name\r\n        tier\r\n        effect\r\n        isCovenant\r\n        pickUp {\r\n          name\r\n        }\r\n        droppedByNPC {\r\n          edges {\r\n            node {\r\n              name\r\n              quest {\r\n                name\r\n              }\r\n              step\r\n              location {\r\n                name\r\n              }\r\n              firstAvailablePhase {\r\n                name\r\n              }\r\n              target {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchString: state.searchString,\r\n  currentResults: state.currentResults,\r\n  query,\r\n  queryType: \"Bloodborne_listRune\",\r\n  nothingResults: \"No Runes found. Try Again.\"\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateSearch: (search) => {\r\n    dispatch(updateSearch(search))\r\n  },\r\n  updateResults: (stuff) => {\r\n    dispatch(updateResults(stuff))\r\n  },\r\n  updateNothing: (nothing) => {\r\n    dispatch(updateNothing(nothing))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Search);","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport SearchPage from \"../components/SearchPage\";\r\nimport SearchRunesContainer from \"../containers/SearchRunesContainer.js\"\r\nimport {  updateResults } from \"../actions\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateResults: (stuff) => {\r\n    dispatch(updateResults(stuff))\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchFor: <SearchRunesContainer></SearchRunesContainer>,\r\n  page: \"Runes\",\r\n\tresults: state.currentResults.map((x,i) => {\r\n    let lineTwo;\r\n    let name = x.node.name;\r\n    if (x.node.isCovenant) lineTwo = \"This is a covenant rune.\"\r\n    else {\r\n      lineTwo = \"Tier \"+x.node.tier;\r\n      name = x.node.name.slice(0, x.node.name.indexOf(\" \"+x.node.tier.toString()))\r\n    }\r\n    return (\r\n      <div className=\"col-6 col-md-4 mb-3\" key={i}>\r\n        <div className=\"card border-dark\">\r\n          <div className=\"card-header bg-dark text-white\">\r\n            <h5>{name}</h5>\r\n            <p>{lineTwo}</p>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <p>{x.node.effect}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchPage);","import { connect } from \"react-redux\";\r\nimport gql from \"graphql-tag\";\r\nimport Search from \"../components/Search\";\r\nimport { updateSearch, updateResults, updateNothing } from \"../actions\";\r\n\r\nlet query = gql`\r\n  query searchGesturesByName($search: String!) {\r\n    Bloodborne_listGesture(filter: {\r\n      node: {\r\n        name: {\r\n          contains: $search\r\n        }\r\n      }\r\n    }) {\r\n      edges {\r\n        node {\r\n          name\r\n          rewardFrom {\r\n            edges {\r\n              node {\r\n                name\r\n                quest {\r\n                  name\r\n                }\r\n                step\r\n                location {\r\n                  name\r\n                }\r\n                firstAvailablePhase {\r\n                  name\r\n                }\r\n                target {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchString: state.searchString,\r\n  currentResults: state.currentResults,\r\n  query,\r\n  queryType: \"Bloodborne_listGesture\",\r\n  nothingResults: \"No Gestures found. Try again.\"\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateSearch: (search) => {\r\n    dispatch(updateSearch(search))\r\n  },\r\n  updateResults: (stuff) => {\r\n    dispatch(updateResults(stuff))\r\n  },\r\n  updateNothing: (nothing) => {\r\n    dispatch(updateNothing(nothing))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Search);","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport SearchPage from \"../components/SearchPage\";\r\nimport SearchGesturesContainer from './SearchGesturesContainer';\r\nimport {  updateResults } from \"../actions\";\r\n\r\nupdateResults([]);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateResults: (stuff) => {\r\n    dispatch(updateResults(stuff))\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchFor: <SearchGesturesContainer></SearchGesturesContainer>,\r\n  page: \"Gestures\",\r\n\tresults: state.currentResults.map((x,i) => {\r\n    console.log(x)\r\n    let encounter = x.node.rewardFrom.edges[0].node;\r\n    return (\r\n      <div className=\"col-6 col-md-4\" key={i}>\r\n        <div className=\"card border-dark\">\r\n          <div className=\"card-header bg-dark text-white\">\r\n            <h5>{x.node.name}</h5>\r\n            <p>Obtained from {encounter.target.name} in {encounter.location.name}</p>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <p>{encounter.name}</p>\r\n            <small>Step {encounter.step} of {encounter.quest.name}</small>\r\n            <small className=\"d-block\">First available during {encounter.firstAvailablePhase.name}</small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchPage);","import React from 'react'\r\n\r\nconst KeyItemSearchOptions = (props) => {\r\n  return (\r\n    <div className=\"col-12\">\r\n      <label htmlFor=\"chaliceCheckBox\" className=\"form-label mr-3\">\r\n        Search for Chalices?\r\n      </label>\r\n      <input id=\"chaliceCheckBox\" type=\"checkbox\" value={props.chaliceCheck} onChange={()=> {\r\n        props.toggleChalice(props.chaliceCheck);\r\n      }}>\r\n      </input>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default KeyItemSearchOptions;","import { connect } from \"react-redux\";\r\nimport KeyItemSearchOptions from \"../components/KeyItemSearchOptions\";\r\nimport { toggleChalice } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  toggleChalice: state.toggleChalice,\r\n  chaliceCheck: state.chaliceCheck\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleChalice: (toggle) => {\r\n    dispatch(toggleChalice(toggle))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KeyItemSearchOptions);","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport gql from \"graphql-tag\";\r\nimport Search from \"../components/Search\";\r\nimport { updateSearch, updateResults, updateNothing } from \"../actions\";\r\nimport KeyItemSearchOptionsContainer from \"../containers/KeyItemSearchOptionsContainer\";\r\n\r\nlet query = gql`\r\n  query searchChalicesByName($search: String!, $chalice: Boolean!) {\r\n    Bloodborne_listKeyItem(filter: {\r\n      node: {\r\n        isChalice: $chalice,\r\n        name: {\r\n          contains: $search\r\n        }\r\n      }\r\n    }) {\r\n      edges {\r\n        node {\r\n          name\r\n          pickUp {\r\n            name\r\n          }\r\n          droppedByBoss {\r\n            edges {\r\n              node {\r\n                name\r\n                location {\r\n                  name\r\n                }\r\n                quickestRoute {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchString: state.searchString,\r\n  currentResults: state.currentResults,\r\n  query,\r\n  queryType: \"Bloodborne_listKeyItem\",\r\n  chaliceCheck: state.chaliceCheck,\r\n  nothingResults: \"No Key Items found. Make sure Chalices are toggled on if searching for a Chalice.\",\r\n  searchOptions: <KeyItemSearchOptionsContainer></KeyItemSearchOptionsContainer>\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateSearch: (search) => {\r\n    dispatch(updateSearch(search))\r\n  },\r\n  updateResults: (stuff) => {\r\n    dispatch(updateResults(stuff))\r\n  },\r\n  updateNothing: (nothing) => {\r\n    dispatch(updateNothing(nothing))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Search);","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport SearchPage from \"../components/SearchPage\";\r\nimport SearchKeyItemsContainer from './SearchKeyItemsContainer';\r\nimport {  updateResults, toggleChalice } from \"../actions\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateResults: (stuff) => {\r\n    dispatch(updateResults(stuff))\r\n  },\r\n  toggleChalice: (toggle) => {\r\n    dispatch(toggleChalice(toggle))\r\n  }\r\n})\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchFor: <SearchKeyItemsContainer></SearchKeyItemsContainer>,\r\n  page: \"Key Items\",\r\n  chaliceCheck: state.chaliceCheck,\r\n\tresults: state.currentResults.map((x,i) => {\r\n    let source;\r\n    let location;\r\n    if(x.node.droppedByBoss.edges[0]) {\r\n      let boss = x.node.droppedByBoss.edges[0].node\r\n      source = boss.name.split(' (')[0];\r\n      location = boss.location.name;\r\n    }\r\n    else if(x.node.pickUp) {\r\n      if (x.node.isChalice) {\r\n        source = \"Chalice Bath Messengers\";\r\n      } else source = \"exploration or interaction\"\r\n      location = x.node.pickUp.name;\r\n    }\r\n    else {\r\n      source = \"an unknown source. This is probably given by a quest.\";\r\n      location = \"an unknown location.\"\r\n    }\r\n    return (\r\n      <div className=\"col-6 col-md-4 mb-3\" key={i}>\r\n        <div className=\"card border-dark\">\r\n          <div className=\"card-header bg-dark text-white\">\r\n            <h5>\r\n              {x.node.name}\r\n            </h5>\r\n            <p>\r\n              <i>Found in</i><br/>\r\n              {location}\r\n            </p>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <p>\r\n              Acquired from {source}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SearchPage);","import React, { Component } from 'react'\r\nimport PageHeader from './PageHeader.js'\r\nimport { ApolloConsumer } from 'react-apollo'\r\n\r\nclass ListPage extends Component {\r\n  componentWillUnmount() {\r\n    this.props.updateResults([])\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <PageHeader\r\n          description={this.props.description}\r\n          page={this.props.page}\r\n        />\r\n        <ApolloConsumer>\r\n          {client => (\r\n            <div className='row'>\r\n              {this.props.buttons.map(x => {\r\n                return (\r\n                  <div className='col d-flex justify-content-center'>\r\n                    <button\r\n                      className='btn btn-outline-dark btn-wide'\r\n                      onClick={async () => {\r\n                        const { data } = await client.query({\r\n                          query: this.props.query,\r\n                          variables: { search: x }\r\n                        })\r\n                        this.props.updateResults(\r\n                          data[this.props.queryType].edges\r\n                        )\r\n                      }}\r\n                      //   async () => {\r\n                      //   this.props.updateResults([])\r\n                      //   const newResults = []\r\n                      //   const { data } = await client.query({\r\n                      //     query: this.props.query,\r\n                      //     variables: { \"search\": x }\r\n                      //   })\r\n                      //   data[this.props.queryType].edges.map(d => newResults.push(d))\r\n                      //   console.log('new results here:')\r\n                      //   console.log(newResults)\r\n                      //   this.props.updateResults(newResults)\r\n                      // }}\r\n                    >\r\n                      {x}\r\n                    </button>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n        </ApolloConsumer>\r\n        <div className='row mt-5'>{this.props.results}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListPage\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport gql from 'graphql-tag'\r\nimport ListPage from '../components/ListPage'\r\nimport { updateResults } from '../actions'\r\n\r\nlet query = gql`\r\n  query listChalicesByType($search: String!) {\r\n    Bloodborne_listKeyItem(\r\n      filter: { node: { isChalice: true, name: { contains: $search } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          name\r\n          pickUp {\r\n            name\r\n          }\r\n          droppedByBoss {\r\n            edges {\r\n              node {\r\n                name\r\n                location {\r\n                  name\r\n                }\r\n                quickestRoute {\r\n                  name\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst mapStateToProps = state => ({\r\n  currentResults: state.currentResults,\r\n  description:\r\n    'Select a dungeon location to view each chalice connected to that realm',\r\n  query,\r\n  queryType: 'Bloodborne_listKeyItem',\r\n  page: 'Chalices',\r\n  buttons: ['Pthumeru', 'Hintertomb', 'Loran', 'Isz'],\r\n  results: state.currentResults.map((x, i) => {\r\n    let source\r\n    let location\r\n    if (x.node.droppedByBoss.edges[0]) {\r\n      let boss = x.node.droppedByBoss.edges[0].node\r\n      source = boss.name.split(' (')[0]\r\n      location = boss.location.name\r\n    } else if (x.node.pickUp) {\r\n      if (x.node.isChalice) {\r\n        source = 'Chalice Bath Messengers'\r\n      } else source = 'exploration or interaction'\r\n      location = x.node.pickUp.name\r\n    } else {\r\n      source = 'an unknown source. This is probably given by a quest.'\r\n      location = 'an unknown location.'\r\n    }\r\n    return (\r\n      <div className='col-6 col-md-4 mb-3' key={i}>\r\n        <div className='card border-dark'>\r\n          <div className='card-header bg-dark text-white'>\r\n            <h5>{x.node.name}</h5>\r\n            <p>\r\n              <i>Found in</i>\r\n              <br />\r\n              {location}\r\n            </p>\r\n          </div>\r\n          <div className='card-body'>\r\n            <p>Acquired from {source}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateResults: stuff => {\r\n    dispatch(updateResults(stuff))\r\n  }\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListPage)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport gql from 'graphql-tag'\r\nimport ListPage from '../components/ListPage'\r\nimport { updateResults } from '../actions'\r\n\r\nlet queryByLoot = gql`\r\n  query listGesturesByLootPhase($search: String!) {\r\n    Bloodborne_listGesture(\r\n      filter: {\r\n        node: {\r\n          lootUnion: {\r\n            connectEncounter: { firstAvailablePhase: { name: { eq: $search } } }\r\n          }\r\n        }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\nlet queryByReward = gql`\r\n  query listGesturesByRewardPhase($search: String!) {\r\n    Bloodborne_listGesture(\r\n      filter: {\r\n        node: {\r\n          rewardFrom: {\r\n            node: { firstAvailablePhase: { name: { eq: $search } } }\r\n          }\r\n        }\r\n      }\r\n    ) {\r\n      edges {\r\n        node {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst mapStateToProps = state => ({\r\n  currentResults: state.currentResults,\r\n  description:\r\n    'Select a game phase to view each gesture that first becomes available in that phase',\r\n  query: queryByReward,\r\n  queryType: 'Bloodborne_listGesture',\r\n  page: 'Gestures',\r\n  buttons: ['Evening', 'Night', 'Blood Moon', 'End of the Dream'],\r\n  results: state.currentResults.map((x, i) => {\r\n    let encounter = x.node.rewardFrom.edges[0].node\r\n    return (\r\n      <div className='col-6 col-md-4' key={i}>\r\n        <div className='card border-dark'>\r\n          <div className='card-header bg-dark text-white'>\r\n            <h5>{x.node.name}</h5>\r\n            <p>\r\n              Obtained from {encounter.target.name} in {encounter.location.name}\r\n            </p>\r\n          </div>\r\n          <div className='card-body'>\r\n            <p>{encounter.name}</p>\r\n            <small>\r\n              Step {encounter.step} of {encounter.quest.name}\r\n            </small>\r\n            <small className='d-block'>\r\n              First available during {encounter.firstAvailablePhase.name}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateResults: stuff => {\r\n    dispatch(updateResults(stuff))\r\n  }\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ListPage)\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport LinksContainer from './containers/LinksContainer';\r\nimport DocsContainer from './containers/DocsContainer';\r\nimport RuneSearchPageContainer from './containers/RuneSearchPageContainer';\r\nimport GestureSearchPageContainer from './containers/GestureSearchPageContainer';\r\nimport KeyItemSearchPageContainer from './containers/KeyItemSearchPageContainer';\r\nimport ListChalicesPageContainer from './containers/ListChalicesPageContainer';\r\nimport ListGesturesPageContainer from './containers/ListGesturesPageContainer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <div>\r\n          <div id=\"wrapper\">\r\n            <nav\r\n              className=\"container navbar-fixed-top bg-light border-bottom\"\r\n              role=\"navigation\"\r\n            >\r\n              <h1>\r\n                Bloodborne Ally\r\n              </h1>\r\n              <div className=\"row\">\r\n                <LinksContainer/>\r\n              </div>\r\n            </nav>\r\n            <div className=\"container bg-light pt-3\" style={{minHeight: \"100vh\"}}>\r\n              <Switch>\r\n                <Route path=\"/item-search\" component={KeyItemSearchPageContainer} />\r\n                <Route path=\"/gesture-search\" component={GestureSearchPageContainer} />\r\n                <Route path=\"/rune-search\" component={RuneSearchPageContainer} />\r\n                <Route path=\"/chalices\" component={ListChalicesPageContainer} />\r\n                <Route path=\"/gestures\" component={ListGesturesPageContainer} />\r\n                <Route exact path=\"/\" component={DocsContainer} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\n\r\nfunction allTypes(state = []) {\r\n  return state\r\n}\r\n\r\nfunction allDocs(state = []) {\r\n  return state\r\n}\r\n\r\nfunction searchString(state = '', action) {\r\n  if (action.type === 'SEARCH_UPDATED') {\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction currentResults(state = [], action) {\r\n  if (action.type === 'RESULTS_UPDATED') {\r\n    return action.value\r\n  } else if (action.type === 'NO_RESULTS') {\r\n    return []\r\n  }\r\n  return state\r\n}\r\n\r\nfunction chaliceCheck(state = false, action) {\r\n  if (action.type === 'FALSE_TO_TRUE') {\r\n    return true\r\n  } else if (action.type === 'TRUE_TO_FALSE') {\r\n    return false\r\n  }\r\n  return state\r\n}\r\n\r\nfunction nothing(state = '', action) {\r\n  if (action.type === 'NOTHING_UPDATED') return action.value\r\n  return state\r\n}\r\n\r\nfunction navLinks(state = [], action) {\r\n  return state\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  allTypes,\r\n  allDocs,\r\n  searchString,\r\n  currentResults,\r\n  chaliceCheck,\r\n  nothing,\r\n  navLinks\r\n})\r\n\r\nexport default rootReducer\r\n","import state from \"./state\";\r\nimport reducers from \"./reducers\";\r\nimport {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n typeof window === \"object\" &&\r\n window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n applyMiddleware(thunk)\r\n);\r\nconst store = createStore(reducers,state,enhancer);\r\nexport default store;\r\n","export default {\r\n\tallTypes: [\r\n\t\t\"Bloodborne_Attire\",\r\n\t\t\"Bloodborne_AttireSet\",\r\n\t\t\"Bloodborne_AttireSlot\",\r\n\t\t\"Bloodborne_Badge\",\r\n\t\t\"Bloodborne_Boss\",\r\n\t\t\"Bloodborne_Element\",\r\n\t\t\"Bloodborne_Encounter\",\r\n\t\t\"Bloodborne_Gesture\",\r\n\t\t\"Bloodborne_Headstone\",\r\n\t\t\"Bloodborne_HunterTool\",\r\n\t\t\"Bloodborne_Imprint\",\r\n\t\t\"Bloodborne_KeyItem\",\r\n\t\t\"Bloodborne_Location\",\r\n\t\t\"Bloodborne_LootSource\",\r\n\t\t\"Bloodborne_Offhand\",\r\n\t\t\"Bloodborne_Phase\",\r\n\t\t\"Bloodborne_Quest\",\r\n\t\t\"Bloodborne_Rune\",\r\n\t\t\"Bloodborne_Shape\",\r\n\t\t\"Bloodborne_Weapon\",\r\n\t\t\"Bloodborne_WeaponVersion\"\r\n\t],\r\n\tallDocs: [\r\n\t\t{\"name\":\"Bloodborne_Attire\",\"description\":\"Each attire piece has defensive stats, but the primary purpose is aethetics.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"slot\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_AttireSlot\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"set\",\"description\":null,\"type\":{\"name\":\"Bloodborne_AttireSet\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"pickUp\",\"description\":\"If this item can be picked up in the world, this is where it can be found.\",\"type\":{\"name\":\"Bloodborne_Location\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lootUnion\",\"description\":null,\"type\":{\"name\":\"Bloodborne_EncounterLootUnion\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"requiresDLC\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByBoss\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_BossConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByNPC\",\"description\":\"This field is being replaced by rewardFrom to better indicate that the related type is an Encounter.\",\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_AttireSet\",\"description\":\"There is no mechanical connection among pieces of a set of attire. This type exists only as a checklist, as some sets are acquired piecemeal.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"badge\",\"description\":\"The Badge required, if any, to buy this set.\",\"type\":{\"name\":\"Bloodborne_Badge\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"requiresKill\",\"description\":\"The NPC that must be killed in order to buy this set.\",\"type\":{\"name\":\"Bloodborne_LootSource\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"pieces\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_AttireConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_AttireSlot\",\"description\":\"There are four slots for attire: 'Headwear', 'Garb', 'Gloves', and 'Trousers'.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"slot\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Badge\",\"description\":\"Required for purchasing certain weapons, attire, or other items. May be found, gifted, or looted from corpses.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"pickUp\",\"description\":\"If this item can be picked up in the world, this is where it can be found.\",\"type\":{\"name\":\"Bloodborne_Location\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lootUnion\",\"description\":null,\"type\":{\"name\":\"Bloodborne_EncounterLootUnion\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"requiresDLC\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"trickWeapons\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_WeaponConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"offhandWeapons\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_OffhandConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByBoss\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_BossConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByNPC\",\"description\":\"This field is being replaced by rewardFrom to better indicate that the related type is an Encounter.\",\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Boss\",\"description\":\"This is a specific instance of a given boss enemy. Each appearance of a boss is a unique entry in this Type. The Loot Source type is used to relate Bosses of the same name.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"location\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Location\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"quickestRoute\",\"description\":\"This field identifies the nearest lamp to the boss's fog wall, the quickest route to the boss from the Hunter's Dream.\",\"type\":{\"name\":\"Bloodborne_Location\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"mandatory\",\"description\":\"If true, this Boss must be killed to finish the game.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"isBeast\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"isKin\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"givesBadge\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Badge\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"givesAttire\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Attire\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"givesRune\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Rune\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"givesWeapon\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Weapon\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"givesKeyItem\",\"description\":null,\"type\":{\"name\":\"Bloodborne_KeyItem\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"connectLootSource\",\"description\":\"Each Boss that shares a name must be connected to the same Loot Source in this field. For example, there are 3 unique Boss entries named Blood-starved Beast, but only one Loot Source with that name.\",\"type\":{\"name\":\"Bloodborne_LootSource\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"notes\",\"description\":\"Notes may contain warnings about boss types or progression.\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Element\",\"description\":\"Some trick weapons, all off-hand weapons, and most tools deal 'elemental' (non-physical) damage. Trick weapons that deal elemental damage cannot have their damage type modified by items such as Fire Paper.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"type\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"defaultWeapons\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_WeaponConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"trickedWeapons\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_WeaponConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"offhandWeapons\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_OffhandConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"tools\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_HunterToolConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Encounter\",\"description\":\"A set of information about where and when an NPC can be found, as well as what may be acquired.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":\"Names should be descriptive, but very brief.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"quest\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Quest\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"step\",\"description\":\"Quests are divided into discreet, consecutive steps by the Encounter type.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"location\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Location\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"firstAvailablePhase\",\"description\":\"The first moon phase in which this Encounter can occur or be triggered.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Phase\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"terminalPhase\",\"description\":\"The first moon phase, if any, in which this Encounter becomes unavailable for the rest of the game.\",\"type\":{\"name\":\"Bloodborne_Phase\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"availableAfter\",\"description\":\"Encounters may have unique requirements that must be fulfilled before they become available to the player. Whenever possible, these requirements are stored as Encounters in their own right, but this field exists as a last resort to describe those requirements that cannot be expressed as an Encounter.\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"likelyUnavailableAfter\",\"description\":\"Many despawn triggers are unverified. This API errs on the side of caution and displays the earliest reported triggers.\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"target\",\"description\":\"This is the NPC the player must either kill or interact with to progress the Quest.\",\"type\":{\"name\":\"Bloodborne_LootSource\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"pickUp\",\"description\":\"Some Encounters do not involve an NPC, but require the player to pick up some Key Item.\",\"type\":{\"name\":\"Bloodborne_KeyItem\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"givesGesture\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Gesture\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"safeToKill\",\"description\":\"If 'True', killing this character after this encounter will not disrupt any ongoing quests. Should be 'True' if character must be killed.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"dropsAttire\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Attire\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"dropsBadge\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Badge\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"dropsKeyItem\",\"description\":null,\"type\":{\"name\":\"Bloodborne_KeyItem\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"dropsRune\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Rune\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"dropsTool\",\"description\":null,\"type\":{\"name\":\"Bloodborne_HunterTool\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"dropsWeapon\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Weapon\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"notes\",\"description\":\"Notes may contain reminders for unique requirements of certain encounters\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"loot\",\"description\":null,\"type\":{\"name\":\"Bloodborne_EncounterLootUnion\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Gesture\",\"description\":\"Most gestures exist only for entertainment, but all are included for the sake of completion.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lootUnion\",\"description\":null,\"type\":{\"name\":\"Bloodborne_EncounterLootUnion\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"rewardFrom\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Headstone\",\"description\":\"Headstones include chalice dungeons and are organized exactly as they are in-game, such that each is a unique collection of unique lanterns. The Hunter's Dream is also included for consistency.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lanterns\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_LocationConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_HunterTool\",\"description\":\"An arcane hunter tool used in the hunt.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"arcane\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"location\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Location\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"quicksilverCost\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"damageType\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Element\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"special\",\"description\":\"Arcane tools may have unique properties or uses\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lootUnion\",\"description\":null,\"type\":{\"name\":\"Bloodborne_EncounterLootUnion\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"requiresDLC\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"notes\",\"description\":\"Notes may contain tips for finding or obtaining item, or warnings about progression\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByNPC\",\"description\":\"This field is being replaced by rewardFrom to better indicate that the related type is an Encounter.\",\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Imprint\",\"description\":\"A unique combination of blood gem shapes, tied to a specific version of a specific weapon.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":\"The format is Version Weapon (for example, Uncanny Kos Parasite).\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"weapon\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Weapon\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"version\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_WeaponVersion\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"shape1\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Shape\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"shape2\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Shape\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"shape3\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Shape\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_KeyItem\",\"description\":\"Any non-badge item required for a quest step or to acquire loot.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"pickUp\",\"description\":\"If this item can be picked up in the world, this is where it can be found.\",\"type\":{\"name\":\"Bloodborne_Location\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lootUnion\",\"description\":null,\"type\":{\"name\":\"Bloodborne_EncounterLootUnion\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"isChalice\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByBoss\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_BossConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByNPC\",\"description\":\"This field is being replaced by rewardFrom to better indicate that the related type is an Encounter.\",\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Location\",\"description\":\"The name of a particular lamp as given in-game.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"headstone\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Bloodborne_Headstone\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"notes\",\"description\":\"Notes may contain tips for finding or obtaining item, or warnings about progression\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"boss\",\"description\":\"The boss fight, if any, that occurs at this lamp.\",\"type\":{\"name\":\"_Bloodborne_BossConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_LootSource\",\"description\":\"A type to unify all encounters and/or fights with characters or bosses of the same name. For example, each Undead Giant Boss is connected to the single Undead Giant Loot Source.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"encounters\",\"description\":\"An array of all Encounters involving this Loot Source if it's an NPC.\",\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"connectBoss\",\"description\":\"An array of each specific occurance of this boss enemy.\",\"type\":{\"name\":\"_Bloodborne_BossConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Offhand\",\"description\":\"Off-hand equipment is usually firearms, but some are specialized and cannot parry.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"strength\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"skill\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"bloodtinge\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"arcane\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"location\",\"description\":\"Where in the world this Offhand can be picked up.\",\"type\":{\"name\":\"Bloodborne_Location\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"badge\",\"description\":\"Which Badge, if any, is required to purchase this Offhand.\",\"type\":{\"name\":\"Bloodborne_Badge\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"element\",\"description\":\"An entry of Null indicates that an off-hand weapon either deals physical damage or no damage.\",\"type\":{\"name\":\"Bloodborne_Element\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"imprint\",\"description\":null,\"type\":{\"name\":\"Bloodborne_Shape\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"quicksilverCost\",\"description\":null,\"type\":{\"name\":\"Int\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"canParry\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"special\",\"description\":\"Certain off-hand equipment may have unique properties\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"requiresDLC\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"notes\",\"description\":\"Notes may contain tips for finding or obtaining item, or warnings about progression\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Phase\",\"description\":\"An irreversible change in the state of the game world, during which certain events, characters, and enemies are altered. The phases are 'Day', 'Night', 'Blood Moon', and 'End of the Dream'.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"blocksEncounters\",\"description\":\"An array of Encounters that become unavailable for the rest of the game at the start of this moon phase.\",\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Quest\",\"description\":\"In this API, a quest is any sequence of actions required to acquire some item. This list attempts to comprehensively expose any missable actions, but excludes any sequence that is entirely mandatory. For example, player must kill Father Gascoigne before killing Amelia to acquire Gold Pendant, but neither step is possible to miss during progression, so this sequence is not included.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":\"Quests are generaly named for the character that starts them. Whenever possible, Encounters are grouped into Quests.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"encounters\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Rune\",\"description\":\"Only Caryll Runes found in pre-defined locations are currently stored. Root Chalice Dungeons are not currently supported.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"isCovenant\",\"description\":null,\"type\":{\"name\":\"Boolean\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"tier\",\"description\":null,\"type\":{\"name\":\"Int\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"effect\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"pickUp\",\"description\":\"If this item can be picked up in the world, this is where it can be found.\",\"type\":{\"name\":\"Bloodborne_Location\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lootUnion\",\"description\":null,\"type\":{\"name\":\"Bloodborne_EncounterLootUnion\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"requiresDLC\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"notes\",\"description\":\"Notes may contain tips for finding or obtaining item, or warnings about progression\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByBoss\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_BossConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByNPC\",\"description\":\"This field is being replaced by rewardFrom to better indicate that the related type is an Encounter.\",\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Shape\",\"description\":\"The shape of a gem determines which weapons it can be used in and influences its properties.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"shape\",\"description\":\"Only gems of shape 'Triangle', 'Waning', 'Circle', or 'Droplet' are recorded.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_Weapon\",\"description\":\"A trick weapon for hunting prey. Used in the main hand, and has a secondary (tricked) form.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"strength\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"skill\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"bloodtinge\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"arcane\",\"description\":\"Required attribute level.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Int\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"trickedAllowsOffhand\",\"description\":\"If true, an Offhand can be wielded at the same time as the tricked form.\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"location\",\"description\":\"Where this weapon can be picked up in the world.\",\"type\":{\"name\":\"Bloodborne_Location\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"badge\",\"description\":\"Which badge is required to buy this weapon from the bath messengers.\",\"type\":{\"name\":\"Bloodborne_Badge\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lostGlyph\",\"description\":\"Optionally, glyphs may be recorded for easily obtaining alternate versions (online only)\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"uncannyGlyph\",\"description\":\"Optionally, glyphs may be recorded for easily obtaining alternate versions (online only)\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"defaultSerrated\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"trickedSerrated\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"defaultBlunt\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"trickedBlunt\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"defaultThrust\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"trickedThrust\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"defaultRighteous\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"trickedRighteous\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"defaultElement\",\"description\":\"Which elemental damage type, if any, can be dealt by this weapon's default form.\",\"type\":{\"name\":\"Bloodborne_Element\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"trickedElement\",\"description\":\"Which elemental damage type, if any, can be dealt by this weapon's tricked form.\",\"type\":{\"name\":\"Bloodborne_Element\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"lootUnion\",\"description\":null,\"type\":{\"name\":\"Bloodborne_EncounterLootUnion\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"requiresDLC\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"Boolean\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"notes\",\"description\":\"Notes may contain tips for finding or obtaining item, or warnings about progression\",\"type\":{\"name\":\"String\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByBoss\",\"description\":null,\"type\":{\"name\":\"_Bloodborne_BossConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"droppedByNPC\",\"description\":\"This field is being replaced by rewardFrom to better indicate that the related type is an Encounter.\",\"type\":{\"name\":\"_Bloodborne_EncounterConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"imprints\",\"description\":\"An array of unique Imprints, one for each version of this weapon.\",\"type\":{\"name\":\"_Bloodborne_ImprintConnection\",\"ofType\":null,\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"},\r\n\t\t{\"name\":\"Bloodborne_WeaponVersion\",\"description\":\"All trick weapons are 'Normal', 'Lost', or 'Uncanny'.\",\"fields\":[{\"name\":\"id\",\"description\":\"The global ID of the object\",\"type\":{\"name\":null,\"ofType\":{\"name\":\"ID\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"},{\"name\":\"name\",\"description\":null,\"type\":{\"name\":null,\"ofType\":{\"name\":\"String\",\"__typename\":\"__Type\"},\"__typename\":\"__Type\"},\"__typename\":\"__Field\"}],\"__typename\":\"__Type\"}\r\n\t],\r\n\tsearchString: \"\",\r\n\tcurrentResults: [],\r\n\tchaliceCheck: false,\r\n\tnothing: \"\",\r\n\tnavLinks: [\r\n\t\t{url: \"/\", name: \"Home\"},\r\n\t\t{url: \"/rune-search\", name: \"Search Runes\"},\r\n\t\t{url: \"/gesture-search\", name: \"Search Gestures\"},\r\n\t\t{url: \"/item-search\", name: \"Search Key Items\"},\r\n\t\t{url: \"/chalices\", name: \"Browse Chalices\"},\r\n\t\t{url: \"/gestures\", name: \"Browse Gestures\"},\r\n\t]\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport store from \"./store\";\nimport {Provider} from \"react-redux\";\n\nconst client = new ApolloClient({\n    uri: \"https://bloodborne-ally-9834e999.us-east1.slicknode.com\",\n    credentials: 'same-origin'\n  });\n\nReactDOM.render(\n    <Provider store={store}>\n        <ApolloProvider client={client}>\n            <App />\n        </ApolloProvider>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}